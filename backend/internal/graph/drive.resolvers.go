package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"
	"time"

	"github.com/dokedu/dokedu/backend/internal/database/db"
	"github.com/dokedu/dokedu/backend/internal/graph/model"
)

// Type is the resolver for the type field.
func (r *fileResolver) Type(ctx context.Context, obj *db.File) (db.FileType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Mime is the resolver for the mime field.
func (r *fileResolver) Mime(ctx context.Context, obj *db.File) (string, error) {
	panic(fmt.Errorf("not implemented: Mime - mime"))
}

// Parent is the resolver for the parent field.
func (r *fileResolver) Parent(ctx context.Context, obj *db.File) (*db.File, error) {
	panic(fmt.Errorf("not implemented: Parent - parent"))
}

// ParentsRecursive is the resolver for the parentsRecursive field.
func (r *fileResolver) ParentsRecursive(ctx context.Context, obj *db.File) ([]*db.File, error) {
	panic(fmt.Errorf("not implemented: ParentsRecursive - parentsRecursive"))
}

// Children is the resolver for the children field.
func (r *fileResolver) Children(ctx context.Context, obj *db.File) ([]*db.File, error) {
	panic(fmt.Errorf("not implemented: Children - children"))
}

// Permissions is the resolver for the permissions field.
func (r *fileResolver) Permissions(ctx context.Context, obj *db.File) ([]*db.FilePermission, error) {
	panic(fmt.Errorf("not implemented: Permissions - permissions"))
}

// DeletedAt is the resolver for the deletedAt field.
func (r *fileResolver) DeletedAt(ctx context.Context, obj *db.File) (*time.Time, error) {
	return &obj.DeletedAt.Time, nil
}

// File is the resolver for the file field.
func (r *filePermissionResolver) File(ctx context.Context, obj *db.FilePermission) (*db.File, error) {
	panic(fmt.Errorf("not implemented: File - file"))
}

// DisplayName is the resolver for the displayName field.
func (r *filePermissionResolver) DisplayName(ctx context.Context, obj *db.FilePermission) (string, error) {
	panic(fmt.Errorf("not implemented: DisplayName - displayName"))
}

// EmailAddress is the resolver for the emailAddress field.
func (r *filePermissionResolver) EmailAddress(ctx context.Context, obj *db.FilePermission) (*string, error) {
	panic(fmt.Errorf("not implemented: EmailAddress - emailAddress"))
}

// Type is the resolver for the type field.
func (r *filePermissionResolver) Type(ctx context.Context, obj *db.FilePermission) (model.FilePermissionType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Inherited is the resolver for the inherited field.
func (r *filePermissionResolver) Inherited(ctx context.Context, obj *db.FilePermission) (bool, error) {
	panic(fmt.Errorf("not implemented: Inherited - inherited"))
}

// CreateFile is the resolver for the createFile field.
func (r *mutationResolver) CreateFile(ctx context.Context, input model.CreateFileInput) (*model.CreateFilePayload, error) {
	panic(fmt.Errorf("not implemented: CreateFile - createFile"))
}

// UpdateFile is the resolver for the updateFile field.
func (r *mutationResolver) UpdateFile(ctx context.Context, input model.UpdateFileInput) (*model.UpdateFilePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateFile - updateFile"))
}

// DeleteFile is the resolver for the deleteFile field.
func (r *mutationResolver) DeleteFile(ctx context.Context, input model.DeleteFileInput) (*model.DeleteFilePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteFile - deleteFile"))
}

// CreateFilePermission is the resolver for the createFilePermission field.
func (r *mutationResolver) CreateFilePermission(ctx context.Context, input model.CreateFilePermissionInput) (*model.CreateFilePermissionPayload, error) {
	panic(fmt.Errorf("not implemented: CreateFilePermission - createFilePermission"))
}

// UpdateFilePermission is the resolver for the updateFilePermission field.
func (r *mutationResolver) UpdateFilePermission(ctx context.Context, input model.UpdateFilePermissionInput) (*model.UpdateFilePermissionPayload, error) {
	panic(fmt.Errorf("not implemented: UpdateFilePermission - updateFilePermission"))
}

// DeleteFilePermission is the resolver for the deleteFilePermission field.
func (r *mutationResolver) DeleteFilePermission(ctx context.Context, input model.DeleteFilePermissionInput) (*model.DeleteFilePermissionPayload, error) {
	panic(fmt.Errorf("not implemented: DeleteFilePermission - deleteFilePermission"))
}

// MyDrive is the resolver for the myDrive field.
func (r *queryResolver) MyDrive(ctx context.Context, input *model.FileFilterInput) (*model.FileConnection, error) {
	panic(fmt.Errorf("not implemented: MyDrive - myDrive"))
}

// SharedDrives is the resolver for the sharedDrives field.
func (r *queryResolver) SharedDrives(ctx context.Context, input *model.FileFilterInput) (*model.FileConnection, error) {
	panic(fmt.Errorf("not implemented: SharedDrives - sharedDrives"))
}

// Trash is the resolver for the trash field.
func (r *queryResolver) Trash(ctx context.Context, input *model.FileFilterInput) (*model.FileConnection, error) {
	panic(fmt.Errorf("not implemented: Trash - trash"))
}

// File is the resolver for the file field.
func (r *queryResolver) File(ctx context.Context, id string) (*db.File, error) {
	panic(fmt.Errorf("not implemented: File - file"))
}

// Files is the resolver for the files field.
func (r *queryResolver) Files(ctx context.Context, input *model.FileFilterInput) (*model.FileConnection, error) {
	panic(fmt.Errorf("not implemented: Files - files"))
}

// File returns FileResolver implementation.
func (r *Resolver) File() FileResolver { return &fileResolver{r} }

// FilePermission returns FilePermissionResolver implementation.
func (r *Resolver) FilePermission() FilePermissionResolver { return &filePermissionResolver{r} }

type fileResolver struct{ *Resolver }
type filePermissionResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *fileResolver) Folder(ctx context.Context, obj *db.File) (*db.File, error) {
	panic(fmt.Errorf("not implemented: Folder - folder"))
}
func (r *fileResolver) Folders(ctx context.Context, obj *db.File) ([]*db.File, error) {
	panic(fmt.Errorf("not implemented: Folders - folders"))
}
func (r *fileResolver) Files(ctx context.Context, obj *db.File) ([]*db.File, error) {
	panic(fmt.Errorf("not implemented: Files - files"))
}
