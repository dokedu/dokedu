scalar Upload

enum FileType {
    BLOB
    FOLDER
}

type File {
    id: ID!
    size: Int!
    name: String!
    type: FileType!
    mime: String!

    parent: File
    parentsRecursive: [File!]!
    children: [File!]!

    permissions: [FilePermission!]!

    createdAt: Time!
    deletedAt: Time
}

enum FilePermissionType {
    USER
    GROUP
    DOMAIN
    ANYONE
}

enum FilePermissionRole {
    VIEWER
    MANAGER
}

type FilePermission {
    id: ID!
    file: File!
    displayName: String!
    emailAddress: String
    type: FilePermissionType!
    role: FilePermissionRole!
    inherited: Boolean!
}

input FileFilterInput {
    search: String
    parentId: ID
    deleted: Boolean = false
    limit: Int
    offset: Int
}

type FileConnection {
    edges: [File!]!
    totalCount: Int!
    pageInfo: PageInfo!
}

extend type Query {
    myDrive(input: FileFilterInput): FileConnection!
    sharedDrives(input: FileFilterInput): FileConnection!
    trash(input: FileFilterInput): FileConnection!

    file(id: ID!): File!
    files(input: FileFilterInput): FileConnection!
}

input CreateFileInput {
    name: String!
    type: FileType!
    folderId: ID
    upload: Upload
}

type CreateFilePayload {
    file: File!
}

input UpdateFileInput {
    id: ID!
    name: String
    parentId: ID
}

type UpdateFilePayload {
    file: File!
}

input DeleteFileInput {
    id: ID!
}

type DeleteFilePayload {
    file: File!
}

input CreateFilePermissionInput {
    fileId: ID!
    userId: ID!
    permission: FilePermissionRole!
}

type CreateFilePermissionPayload {
    filePermission: FilePermission!
}

input UpdateFilePermissionInput {
    id: ID!
    permission: FilePermissionRole!
}

type UpdateFilePermissionPayload {
    filePermission: FilePermission!
}

input DeleteFilePermissionInput {
    id: ID!
}

type DeleteFilePermissionPayload {
    filePermission: FilePermission!
}

extend type Mutation {
    createFile(input: CreateFileInput!): CreateFilePayload!
    updateFile(input: UpdateFileInput!): UpdateFilePayload!
    deleteFile(input: DeleteFileInput!): DeleteFilePayload!

    createFilePermission(input: CreateFilePermissionInput!): CreateFilePermissionPayload!
    updateFilePermission(input: UpdateFilePermissionInput!): UpdateFilePermissionPayload!
    deleteFilePermission(input: DeleteFilePermissionInput!): DeleteFilePermissionPayload!
}